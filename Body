import time
import datetime
import pytz #parrebbe sempre il tempo
import RPi.GPIO as GPIO
import os
from Adafruit_8x8 import EightByEight
from Adafruit_7Segment import SevenSegment

# Clock Example

buttonPin = 17 #numero pin bottone da importare
GPIO.setmode(GPIO.BCM)
GPIO.setup(buttonPin,GPIO.IN)
segment = SevenSegment(address=0x70)

print "Press CTRL+Z to exit"

# Continually update the time on a 4 char, 7-segment display
label: clock
while(True):
if (GPIO.input(buttonPin)):
    #this is the script that will be called (as root)
    os.system("python /home/pi/temperature.py")
    
    
  now = datetime.datetime.now(pytz.timezone('Europe/London')) #aggiunto contenuto parentesi now
  hour = now.hour
  minute = now.minute
  second = now.second
  # Set hours
  segment.writeDigit(0, int(hour / 10))     # Tens
  segment.writeDigit(1, hour % 10)          # Ones
  # Set minutes
  segment.writeDigit(3, int(minute / 10))   # Tens
  segment.writeDigit(4, minute % 10)        # Ones
  # Toggle colon
  segment.setColon(second % 2)              # Toggle colon at 1Hz
  # Wait one second
  if (hour / 10 == a0):
  	if(hour % 10 == a1):
  		if(minute / 10 == a3):
  			if(minute % 10 == a4):
  				goto alarm
  time.sleep(1)
  
#set alarm
label: setalarm
int a0,a1,a3,a4 = 0
int n=0
while (n != 5):
	segment.writeDigit(n, a0)
	if (#bottone su premuto):
		a0 ++
	elif (#bottone gi첫 premuto):
		if (a0 = 0):
			a0 = 2
		else
			a0 --
	elif (#set premuto):
		n ++
		segment.writeDigit(n, a1)
		if (#bottone su premuto):
			a1 ++
		elif (#bottone gi첫 premuto):
			if (a1 = 0):
				a1 = 9
			else
				a1 --
		elif (#set premuto):
			n ++
			n ++
			segment.writeDigit(n, a3)
			if (#bottone su premuto):
				a3 ++
			elif (#bottone gi첫 premuto):
				if (a3 = 0):
					a3 = 5
				else
					a3 --	
			elif (#set premuto):
				n ++
				segment.writeDigit(n, a4)
				if (#bottone su premuto):
					a4 ++
				elif (#bottone gi첫 premuto):
					if (a4 = 0):
					a4 = 9
					else
					a4 --
					
goto clock
		
label : alarm
